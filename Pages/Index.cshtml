@page "/"
@inject HttpClient Http
@using Models
@using Constants

@functions {
    private Models.Activity[] activities { get; set; } 

    protected override async Task OnInitAsync()
    {
      activities = await Http.GetJsonAsync<Models.Activity[]>(RouteConstants.apiActivities);
    }
}

@if (activities == null)
{
  <div>Loading...</div>
}
else
{
  <div class="activityGrid">
    @foreach (Models.Activity activity in activities) 
    {
      <div class="activity">
          <a href="/activities/@activity.id">
            <div
              class="inner_activity_wrapper"
            >
              <img
                src="@(RouteConstants.base64image + activity.Image)"
                class="activity_image"
              />
            </div>
          </a>
        <h4>
          @activity.Title
        </h4>
        <div class="likes_dislikes">
          <span class="likes">
            @activity.Likes
            <img src="./images/thumbs_up.png" height="20px" width="20px" />
          </span>
          <span class="dislikes">
            @activity.Dislikes
            <img src="./images/thumbs_down.png" height="20px" width="20px" />
          </span>
        </div>
      </div>
    }
  </div>
}
@page "/"
@inject HttpClient Http
@using Models
@using Constants

@functions {
    private Models.Activity[] activities { get; set; } 

    protected override async Task OnInitAsync()
    {
      activities = await Http.GetJsonAsync<Models.Activity[]>(RouteConstants.apiActivities);
    }
}

@if (activities == null)
{
  <div>Loading...</div>
}
else
{
  @foreach (Models.Activity activity in activities) 
  {
    <div class="activity">
        <a href="/activities/@activity.id">
          <div
            class="inner_activity_wrapper"
          >
            <div class="index_image_wrapper">
              <img
                src="@(RouteConstants.apiRoot + activity.Picture.url)"
                class="activity_image"
              />
            </div>
          </div>
        </a>
      <h2>
        @activity.Title
      </h2>
    </div>
  }
}